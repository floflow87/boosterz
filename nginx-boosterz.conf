# Configuration Nginx pour boosterz.fr
# /etc/nginx/sites-available/boosterz.fr

# Redirection HTTP vers HTTPS
server {
    listen 80;
    server_name boosterz.fr www.boosterz.fr;
    
    # Dossier pour les challenges Let's Encrypt
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
        try_files $uri =404;
    }
    
    # Redirection permanente vers HTTPS
    location / {
        return 301 https://$server_name$request_uri;
    }
}

# Configuration HTTPS principale
server {
    listen 443 ssl http2;
    server_name boosterz.fr www.boosterz.fr;
    
    # Certificats SSL (générés par Certbot)
    ssl_certificate /etc/letsencrypt/live/boosterz.fr/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/boosterz.fr/privkey.pem;
    
    # Configuration SSL moderne et sécurisée
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    ssl_session_tickets off;
    
    # OCSP Stapling
    ssl_stapling on;
    ssl_stapling_verify on;
    ssl_trusted_certificate /etc/letsencrypt/live/boosterz.fr/chain.pem;
    
    # Headers de sécurité
    add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;
    add_header X-Frame-Options DENY always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Permissions-Policy "camera=(), microphone=(), geolocation=()" always;
    
    # Gestion des logs
    access_log /var/log/nginx/boosterz.fr.access.log;
    error_log /var/log/nginx/boosterz.fr.error.log;
    
    # Taille maximale des uploads (pour les images de cartes)
    client_max_body_size 10M;
    
    # Compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;
    
    # Cache pour les assets statiques
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot|map)$ {
        proxy_pass http://127.0.0.1:5000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Cache long pour les assets
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header Vary Accept-Encoding;
        
        # Désactive les logs pour les assets
        access_log off;
    }
    
    # Configuration WebSocket pour les fonctionnalités temps réel
    location /ws {
        proxy_pass http://127.0.0.1:5000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        
        # Timeouts WebSocket
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 86400s; # 24h pour les connexions WebSocket persistantes
    }
    
    # API routes
    location /api/ {
        proxy_pass http://127.0.0.1:5000;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        
        # Pas de cache pour les API
        add_header Cache-Control "no-cache, no-store, must-revalidate";
        add_header Pragma "no-cache";
        add_header Expires "0";
        
        # Timeouts API
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
    }
    
    # Application principale (SPA)
    location / {
        proxy_pass http://127.0.0.1:5000;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        
        # Support pour les SPAs (Single Page Applications)
        try_files $uri $uri/ @fallback;
        
        # Cache court pour les pages HTML
        expires 1h;
        add_header Cache-Control "public, must-revalidate";
    }
    
    # Fallback pour SPA routing
    location @fallback {
        proxy_pass http://127.0.0.1:5000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    
    # Sécurité : blocage des fichiers sensibles
    location ~* \.(env|log|sql)$ {
        deny all;
        return 404;
    }
    
    # Robots.txt et sitemap
    location = /robots.txt {
        proxy_pass http://127.0.0.1:5000;
        access_log off;
    }
    
    location = /sitemap.xml {
        proxy_pass http://127.0.0.1:5000;
        expires 1d;
    }
    
    # Status de santé pour monitoring
    location = /health {
        proxy_pass http://127.0.0.1:5000;
        access_log off;
    }
}

# Configuration pour www -> non-www redirect
server {
    listen 443 ssl http2;
    server_name www.boosterz.fr;
    
    ssl_certificate /etc/letsencrypt/live/boosterz.fr/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/boosterz.fr/privkey.pem;
    
    return 301 https://boosterz.fr$request_uri;
}